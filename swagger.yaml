openapi: 3.0.0

info:
  title: users
  description: users API
  version: '0.1'

paths:
# [GET] users
  /users:
    get:
      tags:
      - users
      summary: Find All Users
      responses:
        200:
          description: 'OK'
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:  
                    type: array
                    items: 
                      $ref: "#/components/schemas/users"
        500:
          description: 'Server Error'

# [POST] users
    post:
      tags:
      - users
      summary: Add User
      requestBody:
        description: user data
        required: true
        content:
          appliction/json:     
            schema:
              $ref:  "#/components/schemas/users"
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [GET] users/id
  /users/{id}:
    get:
      tags:
      - users
      summary: Find User By Id
      parameters:
      - in: path
        name: id
        description: User Id
        required: true
        schema:
          type : integer
          format: int64
          minimum: 1
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [PUT] users/id
    put:
      tags:
      - users
      summary: Update User By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
        schema:
          type : integer
          format: int64
          minimum: 1
      requestBody:
        description: user data
        required: true
        content:
          appliction/json:     
            schema:
              $ref:  "#/components/schemas/users"
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [DELETE] users/id
    delete:
      tags:
      - users
      summary: Delete User By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
        schema:
          type : integer
          format: int64
          minimum: 1
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# definitions
components:
  schemas:
    users:
      type: object
      required:
          - email
          - password
      properties:
        id:
          type: integer
          description: user Id
        email:
          type: string
          description: user Email
        password:
          type: string
          description: user Password
        events:
          type: array
          items:
            $ref: "#/components/schemas/event"
    event:
      type: object
      properties:
        title:
          type: string
        createdAt:
          type: number
